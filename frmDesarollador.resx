<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctFranco.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>